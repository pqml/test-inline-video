{"version":3,"file":"test-inline-video.umd.js","sources":["../src/index.js","../src/video.js"],"sourcesContent":["import VIDEO from './video'\n\nconst w = window\nconst raf = w.requestAnimationFrame || w.mozRequestAnimationFrame || w.webkitRequestAnimationFrame || w.msRequestAnimationFrame\nvar perf = w.performance || Date\n\nlet visibilityEvt\nif (typeof document.hidden !== 'undefined') visibilityEvt = { name: 'visibilitychange', key: 'hidden' }\nelse if (typeof document.msHidden !== 'undefined') visibilityEvt = { name: 'msvisibilitychange', key: 'msHidden' }\nelse if (typeof document.webkitHidden !== 'undefined') visibilityEvt = { name: 'webkitvisibilitychange', key: 'webkitHidden' }\n\nexport default function testInlineVideo () {\n  return new Promise((resolve, reject) => {\n    let video, playing, nt, skip\n    let fpsCounts = 0\n    let fpsSum = 0\n    let lt = 0\n    const out = { badFps: false, error: new Error('No support for inline video') }\n\n    video = document.createElement('video')\n    document.body.appendChild(video)\n    video.setAttribute('playsinline', '')\n    video.setAttribute('webkit-playsinline', '')\n    video.style.cssText = 'z-index:10000;position:fixed;top:50%;left:50%;width:1px;height:1px;opacity:0.01;pointer-events:none;user-select:none'\n    video.autoplay = true\n    video.muted = true\n    video.src = VIDEO\n    video.play()\n\n    video.onplay = () => {\n      playing = true\n    }\n\n    video.oncanplay = () => {\n      dispose()\n      lt = perf.now()\n      if (playing) {\n        resolve(out)\n      } else {\n        if (raf) {\n          if (visibilityEvt) document.addEventListener(visibilityEvt.name, visibilityChange, false)\n          raf(count)\n        } else {\n          reject(out)\n        }\n      }\n    }\n\n    function count () {\n      nt = perf.now()\n      if (skip) {\n        skip = false\n        lt = nt\n        raf(count)\n        return\n      }\n      fpsSum += nt - lt\n      lt = nt\n      if (++fpsCounts < 12) {\n        raf(count)\n      } else {\n        if (visibilityEvt) document.removeEventListener(visibilityEvt.name, visibilityChange, false)\n        if (fpsCounts / fpsSum * 1000 < 45) out.badFps = true\n        reject(out)\n      }\n    }\n\n    // reset current fps counting\n    function visibilityChange () {\n      skip = true\n    }\n\n    function dispose () {\n      document.body.removeChild(video)\n      video.onplay = null\n      video.oncanplay = null\n      video.pause()\n      video = null\n    }\n  })\n}\n","export default 'data:video/mp4;base64,AAAAIGZ0eXBpc29tAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAAAFttZGF0AAAAMmWIhD///8PAnFAAFPf3333331111111111111111111111111111111111111111114AAAABUGaOeDKAAAABkGaVHgygAAAAAZBmnZ4MoAAAAMKbW9vdgAAAGxtdmhkAAAAAAAAAAAAAAAAAAAD6AAAB9AAAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAjt0cmFrAAAAXHRraGQAAAAPAAAAAAAAAAAAAAABAAAAAAAAB9AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAGQAAABkAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAfQAAAAAAABAAAAAAGzbWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAAAAgAAAARVxAAAAAAALWhkbHIAAAAAAAAAAHZpZGUAAAAAAAAAAAAAAABWaWRlb0hhbmRsZXIAAAABXm1pbmYAAAAUdm1oZAAAAAEAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAR5zdGJsAAAAlnN0c2QAAAAAAAAAAQAAAIZhdmMxAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAGQAZABIAAAASAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGP//AAAAMGF2Y0MBQsAK/+EAGGdCwArZhz+efARAAAADAEAAAAMBA8SJmgEABWjJYPLIAAAAGHN0dHMAAAAAAAAAAQAAAAQAAAABAAAAFHN0c3MAAAAAAAAAAQAAAAEAAAAcc3RzYwAAAAAAAAABAAAAAQAAAAQAAAABAAAAJHN0c3oAAAAAAAAAAAAAAAQAAAA2AAAACQAAAAoAAAAKAAAAFHN0Y28AAAAAAAAAAQAAADAAAABbdWR0YQAAAFNtZXRhAAAAAAAAACFoZGxyAAAAAAAAAABtZGlyYXBwbAAAAAAAAAAAAAAAACZpbHN0AAAAHql0b28AAAAWZGF0YQAAAAEAAAAAR29vZ2xl'\n"],"names":["visibilityEvt","w","window","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","perf","performance","Date","document","hidden","name","key","msHidden","webkitHidden","Promise","resolve","reject","let","video","playing","nt","skip","fpsCounts","fpsSum","lt","out","badFps","error","Error","count","now","removeEventListener","visibilityChange","createElement","body","appendChild","setAttribute","style","cssText","autoplay","muted","src","VIDEO","play","onplay","oncanplay","removeChild","pause","addEventListener"],"mappings":"kLAMIA,ICNW,qtCDETC,EAAIC,OACJC,EAAMF,EAAEG,uBAAyBH,EAAEI,0BAA4BJ,EAAEK,6BAA+BL,EAAEM,wBACpGC,EAAOP,EAAEQ,aAAeC,iBAGG,IAApBC,SAASC,OAAwBZ,GAAkBa,KAAM,mBAAoBC,IAAK,eACvD,IAAtBH,SAASI,SAA0Bf,GAAkBa,KAAM,qBAAsBC,IAAK,iBAC5D,IAA1BH,SAASK,eAA8BhB,GAAkBa,KAAM,yBAA0BC,IAAK,iBAE/F,WACb,OAAO,IAAIG,iBAASC,EAASC,GAC3BC,IAAIC,EAAOC,EAASC,EAAIC,EACpBC,EAAY,EACZC,EAAS,EACTC,EAAK,EACHC,GAAQC,QAAQ,EAAOC,MAAO,IAAIC,MAAM,gCA+B9C,SAASC,IAEP,GADAT,EAAKf,EAAKyB,MACNT,EAIF,OAHAA,GAAO,EACPG,EAAKJ,OACLpB,EAAI6B,GAGNN,GAAUH,EAAKI,EACfA,EAAKJ,IACCE,EAAY,GAChBtB,EAAI6B,IAEAhC,GAAeW,SAASuB,oBAAoBlC,EAAca,KAAMsB,GAAkB,GAClFV,EAAYC,EAAS,IAAO,KAAIE,EAAIC,QAAS,GACjDV,EAAOS,IAKX,SAASO,IACPX,GAAO,EAlDTH,EAAQV,SAASyB,cAAc,SAC/BzB,SAAS0B,KAAKC,YAAYjB,GAC1BA,EAAMkB,aAAa,cAAe,IAClClB,EAAMkB,aAAa,qBAAsB,IACzClB,EAAMmB,MAAMC,QAAU,uHACtBpB,EAAMqB,UAAW,EACjBrB,EAAMsB,OAAQ,EACdtB,EAAMuB,IAAMC,EACZxB,EAAMyB,OAENzB,EAAM0B,kBACJzB,GAAU,GAGZD,EAAM2B,qBAwCJrC,SAAS0B,KAAKY,YAAY5B,GAC1BA,EAAM0B,OAAS,KACf1B,EAAM2B,UAAY,KAClB3B,EAAM6B,QACN7B,EAAQ,KA1CRM,EAAKnB,EAAKyB,MACNX,EACFJ,EAAQU,GAEJzB,GACEH,GAAeW,SAASwC,iBAAiBnD,EAAca,KAAMsB,GAAkB,GACnFhC,EAAI6B,IAEJb,EAAOS"}